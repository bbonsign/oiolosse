set -g default-terminal 'tmux-256color'
set -g  terminal-overrides ',xterm-256color:RGB'
set -ga terminal-features  ',xterm-kitty:RGB'
# Undercurl for errors in vim etc
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'
# underscore colours - needs tmux-3.0
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'


# unbind C-Space
# set -g prefix C-Space
# bind C-Space send-prefix        # Send command on double press
set  -g detach-on-destroy off     # don't exit from tmux when closing a session
set  -g history-limit 1000000     # increase history size (from 2,000)
set  -g renumber-windows on       # renumber all windows when any window is closed
set  -g set-clipboard on          # use system clipboard
set  -g status-position top
set  -g pane-active-border-style 'fg=blue,bg=default'
set  -g pane-border-style 'fg=brightblack,bg=default'
setw -g mode-keys vi
set clock-mode-style 24


# Copy-mode
unbind -T copy-mode-vi 'v'
bind   -T copy-mode-vi 'v'                 send-keys -X begin-selection
bind   -T copy-mode-vi 'C-v'               send-keys -X rectangle-toggle
bind   -T copy-mode-vi 'C-a'               send-keys -X start-of-line
bind   -T copy-mode-vi 'C-e'               send-keys -X end-of-line
bind   -T copy-mode-vi 'y'                 send-keys -X copy-pipe-and-cancel "wl-copy"
bind   -T copy-mode-vi 'MouseDragEnd1Pane' send-keys -X copy-pipe-and-cancel "wl-copy"

# Reload tmux.conf on prefix r
# bind r source-file ~/.config/tmux/tmux.conf \; display "Config reloaded!"
bind 'R' source-file '~/.config/tmux/tmux.conf' > /dev/null\; display-message 'Sourced tmux config!'

# Creating new window (i.e. tab)
bind 'c' new-window

bind 'G' new-window -n 'lazygit' 'lazygit'

# Prefix+s shows session list by default, but is shadowed by my split screen
# biding, so use a instead
bind 'a' choose-tree -s

bind 'h'   select-pane -L
bind 'j'   select-pane -D
bind 'k'   select-pane -U
bind 'l'   select-pane -R
bind 'C-h' select-pane -L
bind 'C-j' select-pane -D
bind 'C-k' select-pane -U
bind 'C-l' select-pane -R

bind 'v' copy-mode
bind 'V' copy-mode

bind ']' next-window
bind '[' previous-window
bind '}' swap-window -d -t +1
bind '{' swap-window -d -t -1

# Toggle status bar
bind -r 'T' set-option -g status

unbind 'g'
bind   'g' switch-client -T tableGit
bind -T tableGit 'g' new-window -n  "lazygit"   "lazygit"
bind -T tableGit 'b' new-window -n  "lg-branch" "lazygit branch"
bind -T tableGit 'l' new-window -n  "lg-log"    "lazygit log"
bind -T tableGit 's' new-window -n  "lg-status" "lazygit status"
bind -T tableGit 't' new-window -n  "lg-stash"  "lazygit stash"

unbind '/'
bind   '/' switch-client -T tableSearch
bind -T tableSearch 'h' new-window -n 'man tmux' 'man tmux'
bind -T tableSearch 'k' run "tmux split-window -p 40 'tmux send-keys -t #{pane_id} \"$(tmux list-keys | fzf +m | paste -s)\"'"
bind -T tableSearch 'K' command-prompt -k -p key { list-keys -1N "%%" }

unbind 'S'
bind   'S' switch-client -T tableServer
bind -T tableServer 'C-k'    kill-server

unbind 's'
bind   's' switch-client -T tableSession
bind -T tableSession 'd'     detach-client
bind -T tableSession 'n'     command-prompt -p "New session:" "new-session -A -s '%%'"
bind -T tableSession 'r'     command-prompt -p "Rename session:" "rename-session '%%'"
bind -T tableSession 's'     display-popup -E 'tmux list-sessions -F "#{session_name}" | fzf | ( read result && tmux switch-client -t "$result" )'
bind -T tableSession 'Space' display-popup -E 'tmux list-sessions -F "#{session_name}" | fzf | ( read result && tmux switch-client -t "$result" )'
bind -T tableSession 't'     display-popup -E 'tmux list-windows -a -F "#{session_name}:#{window_name}:#{window_id}" | fzf | sed -E "s/(.*):.*:(.*)/\1:\2/g" | xargs tmux switch -t'
# Toggle between sessions
bind -T tableSession 'o'  switch-client -l
bind -T tableSession 'i'  switch-client -l

unbind 't'
bind   't'  switch-client -T tableTab
bind  'TAB' switch-client -T tableTab
bind -T tableTab  ']'  next-window
bind -T tableTab  '['  previous-window
bind -T tableTab  '}'  swap-window -d -t +1
bind -T tableTab  '{'  swap-window -d -t -1
bind -T tableTab  'l'  next-window
bind -T tableTab  'h'  previous-window
bind -T tableTab  'c'  new-window
bind -T tableTab  'n'  command-prompt -p "New window:" "new-window -n '%%'"
# Toggle between sessions
bind -T tableTab  'o'  select-window -l
bind -T tableTab  'i'  select-window -l
bind -T tableTab  't'  display-popup -E 'tmux list-windows -F "#{session_name}:#{window_name}:#{window_id}" | fzf | sed -E "s/(.*):.*:(.*)/\1:\2/g" | xargs tmux switch -t'
bind -T tableTab 'Tab' display-popup -E 'tmux list-windows -F "#{session_name}:#{window_name}:#{window_id}" | fzf | sed -E "s/(.*):.*:(.*)/\1:\2/g" | xargs tmux switch -t'
bind -T tableTab  'r'  command-prompt -I "#W" { rename-window "%%" }
bind ','  display-popup -E 'tmux list-windows -F "#{session_name}:#{window_name}:#{window_id}" | fzf | sed -E "s/(.*):.*:(.*)/\1:\2/g" | xargs tmux switch -t'
bind -T tableTab  's'  display-popup -E 'tmux list-windows -a -F "#{session_name}:#{window_name}:#{window_id}" | fzf | sed -E "s/(.*):.*:(.*)/\1:\2/g" | xargs tmux switch -t'

# '-n' is the same as '-T root', i.e. no prefix bindings
# 'M-' is alt key (meta)
# fzf sessions
bind -n 'M-s' display-popup -E 'tmux list-sessions -F "#{session_name}" | fzf | ( read result && tmux switch-client -t "$result" )'
# fzf tabs
bind -n 'M-t' display-popup -E 'tmux list-windows -F "#{session_name}:#{window_name}:#{window_id}" | fzf | sed -E "s/(.*):.*:(.*)/\1:\2/g" | xargs tmux switch -t'
# fzf all tabs in all sessions
bind -n 'M-T'   display-popup -E 'tmux list-windows -a -F "#{session_name}:#{window_name}:#{window_id}" | fzf | sed -E "s/(.*):.*:(.*)/\1:\2/g" | xargs tmux switch -t'

bind -n 'M-1'  select-window -t :=1
bind -n 'M-2'  select-window -t :=2
bind -n 'M-3'  select-window -t :=3
bind -n 'M-4'  select-window -t :=4
bind -n 'M-5'  select-window -t :=5
bind -n 'M-6'  select-window -t :=6
bind -n 'M-7'  select-window -t :=7
bind -n 'M-8'  select-window -t :=8
bind -n 'M-9'  select-window -t :=9
bind -n 'M-]'  next-window
bind -n 'M-['  previous-window
bind -n 'M-}'  swap-window -d -t +1
bind -n 'M-{'  swap-window -d -t -1
bind -n 'M-o'  select-window -l
bind -n 'M-i'  select-window -l
bind -n 'M-O'  switch-client -l
bind -n 'M-I'  switch-client -l
bind -n 'M-:'  command-prompt
bind -n 'M-C'  clock-mode

# bind -n 'M-h' select-pane -L
# bind -n 'M-j' select-pane -D
# bind -n 'M-k' select-pane -U
# bind -n 'M-l' select-pane -R
bind -n 'M-z' resize-pane -Z
bind -n 'M-v' copy-mode
bind -n 'M-n' split-window -h -c '#{pane_current_path}'
bind -n 'M--' split-window -v -c '#{pane_current_path}'
bind -n 'M-b' split-window -v -c '#{pane_current_path}'
# Break pane into new window
bind -n 'M-B' break-pane

unbind 'w'
bind   'w' switch-client -T tableWin
bind -T tableWin 'h'   select-pane -L
bind -T tableWin 'j'   select-pane -D
bind -T tableWin 'k'   select-pane -U
bind -T tableWin 'l'   select-pane -R
bind -T tableWin 'z'   resize-pane -Z
bind -T tableWin 'v'   split-window -h -c '#{pane_current_path}'
bind -T tableWin 's'   split-window -v -c '#{pane_current_path}'
bind -T tableWin 'n'   split-window -v -c '#{pane_current_path}'
bind           'Enter' split-window -h -c '#{pane_current_path}'
# Break pane into new window
bind -T tableWin 'b' break-pane
# Break pane into new window and keep focus on the current window
bind -T tableWin 'B' break-pane -d


# Do not copy or clear the selection or exit copy mode when the mouse is released. The keyboard must be used to copy the selection:
unbind -Tcopy-mode MouseDragEnd1Pane

### vim-tmux-navigator
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'M-h' if-shell "$is_vim" 'send-keys M-h'  'select-pane -L'
bind-key -n 'M-j' if-shell "$is_vim" 'send-keys M-j'  'select-pane -D'
bind-key -n 'M-k' if-shell "$is_vim" 'send-keys M-k'  'select-pane -U'
bind-key -n 'M-l' if-shell "$is_vim" 'send-keys M-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
# if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
# if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'M-h' select-pane -L
bind-key -T copy-mode-vi 'M-j' select-pane -D
bind-key -T copy-mode-vi 'M-k' select-pane -U
bind-key -T copy-mode-vi 'M-l' select-pane -R
# bind-key -T copy-mode-vi 'C-\' select-pane -l
# unbind 'C-h'
# unbind 'C-j'
# unbind 'C-k'
# unbind 'C-l'
#

### Status Bar
bg='#7aa2f7'
indicator='  ⯎   '
window_status_format=' #{window_index}·#{window_name} '
status_right='#{session_name}  #(date --utc +"%%Y-%%m-%%d %%H:%%M:%%S")'
status_left="#[bg=default,fg=default,bold]#{?client_prefix,,${indicator}}#[bg=${bg},fg=black,bold]#{?client_prefix,${indicator},}#[bg=default,fg=default,bold]"
expanded_icon=' '

set -g status-position              'top'
set -g status-style                 'bg=default,fg=default'
set -g status-justify               'left'
set -g status-left                  "${status_left}"
set -g status-right                 '#[fg=#7aa2f7]#[fg=#000000,bg=#7aa2f7]#{session_name}#[fg=#7aa2f7,bg=default]#[fg=default,bg=default]  #(date --utc +"%%Y-%%m-%%d %%H:%%M:%%S")'
set -g window-status-format         "${window_status_format}"
set -g window-status-current-format "#[bg=${bg},fg=#000000] ${window_status_format}#{?window_zoomed_flag,${expanded_icon}, }"
set -g window-status-format         " ${window_status_format}#{?window_zoomed_flag,${expanded_icon}, }"

############################
# TokyoNight colors
# [colors]
# foreground = "#c0caf5"
# background = "#1a1b26"
# cursor_bg = "#c0caf5"
# cursor_border = "#c0caf5"
# cursor_fg = "#1a1b26"
# selection_bg = "#283457"
# selection_fg = "#c0caf5"
# split = "#7aa2f7"
# compose_cursor = "#ff9e64"
# scrollbar_thumb = "#292e42"
# ansi = ["#15161e", "#f7768e", "#9ece6a", "#e0af68", "#7aa2f7", "#bb9af7", "#7dcfff", "#a9b1d6"]
# brights = ["#414868", "#f7768e", "#9ece6a", "#e0af68", "#7aa2f7", "#bb9af7", "#7dcfff", "#c0caf5"]
