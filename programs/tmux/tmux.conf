# set -g default-terminal 'screen-254color'
set -g  terminal-overrides ',xterm-256color:RGB'
set -ga terminal-features  ',xterm-kitty:RGB'

# unbind C-Space
# set -g prefix C-Space
# bind C-Space send-prefix        # Send command on double press
set  -g detach-on-destroy off     # don't exit from tmux when closing a session
set  -g history-limit 1000000     # increase history size (from 2,000)
set  -g renumber-windows on       # renumber all windows when any window is closed
set  -g set-clipboard on          # use system clipboard
set  -g status-position top
set  -g pane-active-border-style 'fg=blue,bg=default'
set  -g pane-border-style 'fg=brightblack,bg=default'
setw -g mode-keys vi


# Copy-mode
unbind -T copy-mode-vi 'v'
bind   -T copy-mode-vi 'v'                 send-keys -X begin-selection
bind   -T copy-mode-vi 'C-v'               send-keys -X rectangle-toggle
bind   -T copy-mode-vi 'y'                 send-keys -X copy-pipe-and-cancel "wl-copy"
bind   -T copy-mode-vi 'MouseDragEnd1Pane' send-keys -X copy-pipe-and-cancel "wl-copy"

# Reload tmux.conf on prefix r
# bind r source-file ~/.config/tmux/tmux.conf \; display "Config reloaded!"
bind 'R' source-file '~/.config/tmux/tmux.conf' > /dev/null\; display-message 'Sourced tmux config!'

# Creating new window (i.e. tab)
bind 'c' new-window

# Prefix+s shows session list by default, but is shadowed by my split screen
# biding, so use a instead
bind 'a' choose-tree -s

bind 'h'   select-pane -L
bind 'j'   select-pane -D
bind 'k'   select-pane -U
bind 'l'   select-pane -R
bind 'C-h' select-pane -L
bind 'C-j' select-pane -D
bind 'C-k' select-pane -U
bind 'C-l' select-pane -R

bind 'V' copy-mode

bind ']' next-window
bind '[' previous-window
bind '}' swap-window -d -t +1
bind '{' swap-window -d -t -1

# Toggle status bar
bind -r 't' set-option -g status


unbind '/'
bind   '/' switch-client -T tableSearch
bind -T tableSearch 'h' new-window 'man tmux'
bind -T tableSearch 'k' run "tmux split-window -p 40 'tmux send-keys -t #{pane_id} \"$(tmux list-keys | fzf +m | paste -s)\"'"
bind -T tableSearch 'K' command-prompt -k -p key { list-keys -1N "%%" }

unbind 's'
bind   's' switch-client -T tableSession
bind -T tableSession 'd'     detach-client
bind -T tableSession 's'     display-popup -E 'tmux list-sessions -F "#{session_name}" | fzf | read result && tmux switch-client -t "$result"'
bind -T tableSession 'Space' display-popup -E 'tmux list-sessions -F "#{session_name}" | fzf | read result && tmux switch-client -t "$result"'

unbind 't'
bind   't'  switch-client -T tableTab
bind  'TAB' switch-client -T tableTab
bind -T tableTab  ']'  next-window
bind -T tableTab  '['  previous-window
bind -T tableTab  '}'  swap-window -d -t +1
bind -T tableTab  '{'  swap-window -d -t -1
bind -T tableTab  'l'  next-window
bind -T tableTab  'h'  previous-window
bind -T tableTab  'c'  new-window
bind -T tableTab  'n'  new-window
bind -T tableTab  't'  display-popup -E 'tmux list-windows -F "#{session_name}:#{window_name}:#{window_id}" | fzf | sed -E "s/(.*):.*:(.*)/\1:\2/g" | xargs tmux switch -t'
bind -T tableTab 'Tab' display-popup -E 'tmux list-windows -F "#{session_name}:#{window_name}:#{window_id}" | fzf | sed -E "s/(.*):.*:(.*)/\1:\2/g" | xargs tmux switch -t'
bind -T tableTab  'r'  command-prompt -I "#W" { rename-window "%%" }
bind ','  display-popup -E 'tmux list-windows -F "#{session_name}:#{window_name}:#{window_id}" | fzf | sed -E "s/(.*):.*:(.*)/\1:\2/g" | xargs tmux switch -t'


unbind 'w'
bind   'w' switch-client -T tableWin
bind -T tableWin 'h'   select-pane -L
bind -T tableWin 'j'   select-pane -D
bind -T tableWin 'k'   select-pane -U
bind -T tableWin 'l'   select-pane -R
bind -T tableWin 'v'   split-window -h -c '#{pane_current_path}'
bind -T tableWin 's'   split-window -v -c '#{pane_current_path}'
bind           'Enter' split-window -h -c '#{pane_current_path}'
# Break pane into new window
bind -T tableWin 'b' break-pane
# Break pane into new window and keep focus on the current window
bind -T tableWin 'B' break-pane -d


# Do not copy or clear the selection or exit copy mode when the mouse is released. The keyboard must be used to copy the selection:
unbind -Tcopy-mode MouseDragEnd1Pane

# Undercurl for errors in vim etc
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'
# underscore colours - needs tmux-3.0
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'


bg='#7aa2f7'
indicator='  ⯎   '
window_status_format=' #{window_index}·#{window_name} '
status_right='#{session_name}'
status_left="#[bg=default,fg=default,bold]#{?client_prefix,,${indicator}}#[bg=${bg},fg=black,bold]#{?client_prefix,${indicator},}#[bg=default,fg=default,bold]"
expanded_icon=' '

set -g status-position              'top'
set -g status-style                 'bg=default,fg=default'
set -g status-justify               'centre'
set -g status-left                  "${status_left}"
set -g status-right                 "${status_right}"
set -g window-status-format         "${window_status_format}"
set -g window-status-current-format "#[bg=${bg},fg=#000000] ${window_status_format}#{?window_zoomed_flag,${expanded_icon}, }"
set -g window-status-format         " ${window_status_format}#{?window_zoomed_flag,${expanded_icon}, }"

############################
# TokyoNight colors
# [colors]
# foreground = "#c0caf5"
# background = "#1a1b26"
# cursor_bg = "#c0caf5"
# cursor_border = "#c0caf5"
# cursor_fg = "#1a1b26"
# selection_bg = "#283457"
# selection_fg = "#c0caf5"
# split = "#7aa2f7"
# compose_cursor = "#ff9e64"
# scrollbar_thumb = "#292e42"
# ansi = ["#15161e", "#f7768e", "#9ece6a", "#e0af68", "#7aa2f7", "#bb9af7", "#7dcfff", "#a9b1d6"]
# brights = ["#414868", "#f7768e", "#9ece6a", "#e0af68", "#7aa2f7", "#bb9af7", "#7dcfff", "#c0caf5"]
