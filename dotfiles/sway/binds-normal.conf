set $exec_swaymsg          exec nu -c 'swaymsg ("" | wmenu -p "swaymsg ")'
set $exec_rename_workspace exec "$HOME/.config/sway/scripts/rename_workspace.nu" 
set $exec_mark_window      exec nu -c 'swaymsg mark ("" | wmenu -p "Mark window ")'
set $exec_goto_mark        exec "$HOME/.config/sway/scripts/goto_mark.nu"
set $exec_focus_output     exec nu -c 'swaymsg focus output (swaymsg -r -t get_outputs | from json | get name | to text | fuzzel --dmenu --prompt Output:)'
# set $exec_focus_output     exec swaymsg -r -t get_outputs | jq '.[] | .name' | rofi -i -dmenu | xargs -I_arg -r swaymsg focus output _arg
set $exec_focus_workspace  exec swaymsg -r -t get_workspaces | jq '.[] | .name + .representation' | rofi -i -dmenu | cut --characters 2 | xargs -I_arg swaymsg workspace number _arg

bindsym $mod+colon       $exec_swaymsg
bindsym $mod+n           $exec_rename_workspace
bindsym $mod+m           $exec_mark_window
bindsym $mod+apostrophe  $exec_goto_mark

set $mode_goto "(w)orkspace | (o)utput | (m)ark"
mode $mode_goto {
  bindsym o  $exec_focus_output   , mode default
  bindsym w  $exec_focus_workspace, mode default
  bindsym m  $exec_goto_mark      , mode default

  bindsym Escape mode default
  bindsym Return mode default
}

set $mode_notifications "(n|t)toggle | (C)lear | (D)o-not-disturn"
mode $mode_notifications {
  bindsym o        exec swaync-client --toggle-panel , mode default
  bindsym n        exec swaync-client --toggle-panel , mode default
  bindsym t        exec swaync-client --toggle-panel , mode default
  bindsym c  exec swaync-client --close-all    , mode default
  bindsym Shift+c  exec swaync-client --close-all    , mode default
  bindsym Shift+d  exec swaync-client --toggle-dnd   , mode default
 
  bindsym Escape mode default
  bindsym Return mode default
}
set $mode_run "(b)rowser|(s)slack|(t)erm"
mode $mode_run {
    bindsym b  exec $browser, mode default
    bindsym s  exec $slack, mode default
    bindsym t  exec $term, mode default
    bindsym 1  exec 1password, mode default
    bindsym p  exec 1password, mode default

    bindsym Escape mode default
    bindsym Return mode default
}

set $mode_normal "(0)system|(.)reload|(g)oto|(b)ar|(l)ayout|(n)otifications|(r)un|(G)aps|(t)oggle"
mode $mode_normal {
    bindsym space        exec $launcher; mode default
    bindsym $mod+space   exec wlr-which-key; mode default
    bindsym Ctrl+Return  split toggle, exec $term, mode default
    bindsym $mod+Return  split toggle, exec $term, mode default

    bindsym bracketright workspace next, mode default
    bindsym bracketleft  workspace prev, mode default
    bindsym 1 workspace 1, mode default
    bindsym 2 workspace 2, mode default
    bindsym 3 workspace 3, mode default
    bindsym 4 workspace 4, mode default
    bindsym 5 workspace 5, mode default
    bindsym 6 workspace 6, mode default
    bindsym 7 workspace 7, mode default
    bindsym 8 workspace 8, mode default
    bindsym 9 workspace 9, mode default

    bindsym comma      exec $window_chooser
    bindsym period     reload, mode default
    bindsym Shift+r    reload, mode default
    bindsym colon      $exec_swaymsg
    bindsym apostrophe $exec_goto_mark
    bindsym 0          mode $mode_system
    bindsym b          mode $mode_bar
    bindsym f          floating toggle, mode default
    bindsym g          mode $mode_goto
    bindsym Shift+g    mode $mode_gaps
    bindsym i          mode default
    bindsym l          mode $mode_layout
    bindsym m          mode $exec_mark_window
    bindsym n          mode $mode_notifications
    bindsym r          mode $mode_run
    # bindsym s          mode "$scratchpads"
    bindsym t          mode $mode_toggle
    bindsym Control+o  workspace back_and_forth, mode default
    bindsym Control+i  workspace back_and_forth, mode default
    bindsym w          mode $mode_window

    bindsym Escape mode default
    bindsym Return mode default
}

bindsym $mod+space mode $mode_normal


# vi: ft=swayconfig
